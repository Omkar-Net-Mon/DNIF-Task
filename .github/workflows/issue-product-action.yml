name: Add Issue to product-roadmap Project

on:
  issues:
    types: [opened]

env:
  PROJECT_NUMBER: 12  # Set the project number here
  COLUMN_NAME: "Triage"  # Set the column name here

jobs:
  add-issue-to-project:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get project ID
      id: get_project_id
      env:
        GITHUB_TOKEN: ${{ secrets.ADD_TO_PROJECT_PAT }}
        PROJECT_NUMBER: ${{ env.PROJECT_NUMBER }}
      run: |
        REPO_OWNER=${{ github.repository_owner }}
        REPO_NAME=${{ github.event.repository.name }}
        
        # Query the organization's projects to get the project ID
        PROJECT_ID=$(gh api graphql -F owner="$REPO_OWNER" -F number="$PROJECT_NUMBER" -f query='
          query($owner: String!, $number: Int!) {
            organization(login: $owner) {
              projectV2(number: $number) {
                id
              }
            }
          }' -q .data.organization.projectV2.id)
        echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV

    - name: Add issue to project
      env:
        GITHUB_TOKEN: ${{ secrets.ADD_TO_PROJECT_PAT }}
      run: |
        ISSUE_NUMBER=${{ github.event.issue.number }}
        ISSUE_NODE_ID=$(gh api graphql -F owner='${{ github.repository_owner }}' -F name='${{ github.event.repository.name }}' -F number="$ISSUE_NUMBER" -f query='
          query($owner: String!, $name: String!, $number: Int!) {
            repository(owner: $owner, name: $name) {
              issue(number: $number) {
                id
              }
            }
          }' -q .data.repository.issue.id)

        PROJECT_ID=${{ env.PROJECT_ID }}

        # Add the issue to the project
        ITEM_ID=$(gh api graphql -F projectId="$PROJECT_ID" -F contentId="$ISSUE_NODE_ID" -f query='
          mutation($projectId: ID!, $contentId: ID!) {
            addProjectV2ItemById(input: {projectId: $projectId, contentId: $contentId}) {
              item {
                id
              }
            }
          }' -q .data.addProjectV2ItemById.item.id)

        echo "ITEM_ID=$ITEM_ID" >> $GITHUB_ENV

    - name: Move issue to specified column
      env:
        GITHUB_TOKEN: ${{ secrets.ADD_TO_PROJECT_PAT }}
        COLUMN_NAME: ${{ env.COLUMN_NAME }}
      run: |
        PROJECT_ID=${{ env.PROJECT_ID }}
        ITEM_ID=${{ env.ITEM_ID }}

        # Get the field ID for the Status field
        FIELD_ID=$(gh api graphql -F projectId="$PROJECT_ID" -f query='
          query($projectId: ID!) {
            node(id: $projectId) {
              ... on ProjectV2 {
                fields(first: 100) {
                  nodes {
                    ... on ProjectV2SingleSelectField {
                      id
                      name
                      options {
                        id
                        name
                      }
                    }
                  }
                }
              }
            }
          }' -q '.data.node.fields.nodes[] | select(.name=="Status") | .id')

        # Get the column ID for the specified column name
        OPTION_ID=$(gh api graphql -F fieldId="$FIELD_ID" -f query='
          query($fieldId: ID!) {
            node(id: $fieldId) {
              ... on ProjectV2SingleSelectField {
                options {
                  id
                  name
                }
              }
            }
          }' -q '.data.node.options[] | select(.name=="'$COLUMN_NAME'") | .id')

        # Debugging: Print field and option IDs
        echo "FIELD_ID=$FIELD_ID"
        echo "OPTION_ID=$OPTION_ID"

        # Move the issue to the specified column
        gh api graphql -F projectId="$PROJECT_ID" -F itemId="$ITEM_ID" -F fieldId="$FIELD_ID" -F singleSelectOptionId="$OPTION_ID" -f query='
          mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $singleSelectOptionId: String!) {
            updateProjectV2ItemFieldValue(input: {projectId: $projectId, itemId: $itemId, fieldId: $fieldId, value: {singleSelectOptionId: $singleSelectOptionId}}) {
              projectV2Item {
                id
              }
            }
          }'
